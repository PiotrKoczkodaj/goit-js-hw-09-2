{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAOH,SAASC,cAAc,sBAC9BG,EAAcJ,SAASC,cAAc,wBAC/BD,SAASC,cAAc,yBAsCnCF,EAAKM,iBAAiB,UAlCtB,SAAuBC,EAAEC,EAASC,GAChCF,EAAEG,iBACFD,EAAQE,OAAOR,EAAWS,OACVD,OAAON,EAAYO,OACrBD,OAAOP,EAAKQ,OAC5BC,QAAQC,WAAWC,UACFC,aAAY,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GAExB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,uBAAqBb,QAAiBC,OAE5Ca,EAAK,sBAAoBd,QAAiBC,MAAU,IAIhDc,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MAS1BZ,QAAQC,IAAI,uBAAqBU,QAAiBC,OAAW,IAC5DC,OAAM,EAACF,SAACA,EAAQC,MAACA,MAClBZ,QAAQC,IAAI,sBAAoBU,QAAeC,OAAW,GAC1D,GAEFhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\n\n\n\nfunction createPromise(e,position,delay,) {\n  e.preventDefault();\n  delay = Number(delayInput.value);\n  let amountNum = Number(amountInput.value);\n  let stepNum = Number(step.value)\nconsole.log(typeof(delayNum))\n  let interval = setInterval(() => {\n    const shouldResolve = Math.random() > 0.3;\n    \n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  });\n\n    promise.then(({ position, delay }) => {\n\n      const positionRendering = () => {\n        \n        for (let i = 1; i<=amount; i++) {\n          return i\n        }\n      };\n\n    console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  }).catch(({position,delay}) => {\n    console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n  });\n\n},delay)\n  }\n\nform.addEventListener('submit',createPromise)\n\n// setInterval(() => {\n// const isSuccess = Math.random() > 0.3;\n// const promise = new Promise((resolve, reject) => {\n  \n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   });\n\n\n// promise.then(\n//   // onResolve will run third or not at all\n//   value => {\n    \n//     console.log(value); // \"Success! Value passed to resolve function\"\n//   },\n//   // onReject will run third or not at all\n//   error => {\n    \n//     console.log(error); // \"Error! Error passed to reject function\"\n//   }\n// )},1000);"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amountInput","addEventListener","e","position1","delay1","preventDefault","Number","value","console","log","delayNum","setInterval","shouldResolve","Math","random","Promise","resolve","reject","then","position","delay","catch"],"version":3,"file":"03-promises.a3fd5ebf.js.map"}