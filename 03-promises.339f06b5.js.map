{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBAEpCE,GADOH,SAASC,cAAc,sBAAsBG,MACtCJ,SAASC,cAAc,yBAC/BD,SAASC,cAAc,yBAqCnCF,EAAKM,iBAAiB,UAjCtB,SAAuBC,EAAEC,EAASC,GAChCF,EAAEG,iBACFD,EAAQN,EAAWE,MACnBM,OAASP,EAAYC,MAENO,aAAY,WACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAExB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EACFI,EAAQ,uBAAwCE,OAAfX,EAAS,QAAYW,OAANV,EAAM,OAEpDS,EAAK,sBAAuCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAI9CW,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALZ,MAS1Be,QAAQC,IAAI,uBAAwCN,OAAfG,EAAS,QAAYH,OAANI,EAAM,M,IACzDG,OAAM,SAAAL,G,IAAEC,EAAQD,EAARC,SAASC,EAAKF,EAALZ,MAClBe,QAAQC,IAAI,sBAAqCN,OAAfG,EAAS,QAAYH,OAANI,EAAM,M,MAGzDd,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]').value;\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\n\n\n\nfunction createPromise(e,position,delay) {\n  e.preventDefault();\n  delay = delayInput.value;\n  amount = amountInput.value;\n\n  let interval = setInterval(() => {\n    const shouldResolve = Math.random() > 0.3;\n    \n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  });\n\n    promise.then(({ position, delay }) => {\n\n      const positionRendering = () => {\n        \n        for (let i = 1; i<=amount; i++) {\n          return i\n        }\n      };\n\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({position,delay}) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n},delay)\n  }\n\nform.addEventListener('submit',createPromise)\n\n// setInterval(() => {\n// const isSuccess = Math.random() > 0.3;\n// const promise = new Promise((resolve, reject) => {\n  \n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   });\n\n\n// promise.then(\n//   // onResolve will run third or not at all\n//   value => {\n    \n//     console.log(value); // \"Success! Value passed to resolve function\"\n//   },\n//   // onReject will run third or not at all\n//   error => {\n    \n//     console.log(error); // \"Error! Error passed to reject function\"\n//   }\n// )},1000);"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$amountInput","value","addEventListener","e","position1","delay","preventDefault","amount","setInterval","shouldResolve","Math","random","Promise","resolve","reject","concat","then","param","position","_$delay","console","log","catch"],"version":3,"file":"03-promises.339f06b5.js.map"}