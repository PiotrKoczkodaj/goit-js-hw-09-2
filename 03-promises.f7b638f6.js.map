{"mappings":"YAAaA,SAASC,cAAc,SAApC,IAOuBC,EAASC,EAExBC,EARFC,EAAQL,SAASC,cAAc,uBAAuBK,MAC/CN,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACtCM,QAAQC,IAAIH,GAGWH,EAuBT,EAvBkBC,EAuBhB,IArBRC,EAAgBK,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAEjCC,aAAY,WACbV,EACFQ,EAAQ,uBAA4CG,OAAnBC,IAAId,SAAS,QAAgBa,OAAVC,IAAIC,MAAM,OAE5DJ,EAAK,sBAAqCE,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,GAGlDA,E,IAECe,MAAK,SAAAN,GACNL,QAAQC,IAAII,E,IACXM,MAAK,SAAAL,GACNN,QAAQC,IAAIK,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]').value;\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconsole.log(delay)\n\n\nfunction createPromise(position,delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n\n       setInterval(() => {\n  if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${obj.position} in ${obj.delay}ms`);\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n\n  },delay)\n\n  }).then(resolve => {\n    console.log(resolve)\n  }).then(reject => {\n    console.log(reject)\n  })\n}\n\n// form.addEventListener('click',createPromise)\ncreatePromise(1,1000)"],"names":["document","querySelector","position","delay1","shouldResolve","$ce04d3a99e08e73b$var$delay","value","console","log","Math","random","Promise","resolve","reject","setInterval","concat","obj","delay","then"],"version":3,"file":"03-promises.f7b638f6.js.map"}